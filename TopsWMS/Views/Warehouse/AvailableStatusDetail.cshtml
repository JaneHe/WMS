@{
    Layout = null;
    string n_Warehouse_Id = Request.QueryString["n_Warehouse_Id"].ToString();
    string s_Warehouse_Name = Request.QueryString["s_Warehouse_Name"].ToString();
     
}
<!DOCTYPE html>
<html>
<head>
    <title>可用状态历史操作记录</title>
    <script src="../../Scripts/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="../../Scripts/vue/vue.js" type="text/javascript"></script>
    <style>
        #module_toolbar
        {
            background: #EAEEF5; 
            margin-bottom: 3px; 
            width: 100%;
        }
        .param_item
        {
            display: inline-block;
            font-size: 12px;
            margin: 5px 5px;
            width:220px;
        }
        .param_item_btn
        {
            display: inline-block;
            font-size: 12px;
            margin: 5px 5px;
        }
        
        .param_item label
        {
            width:100px;
        }
        .param_item input[type=text],.param_item input[type=date]
        {
            width: 120px;
            margin-left:5px; 
        } 
        
        .contents_title table
        {
            width: 1112px;
            height: 22px;
            background-color: #DAEAFF;
            background-image: linear-gradient(#DBEAFE, #C5DEFB);
        }
        .contents_content
        {
            height: 390px;
            overflow-y: scroll;
            width: 1129px;
        }
        .contents_content table
        {
            width:100%;
        }
        .contents_title td,.contents_content td
        {
            border: 1px solid #A3C0E8;
            line-height: 22px;
            font-size: 12px;
            text-align: center;
        }
        .contents_title tr td:nth-child(-n+3),
        .contents_title tr td:nth-child(n+4),
        .contents_content tr td:nth-child(-n+3),
        .contents_content tr td:nth-child(n+4)
        {
            width:9%;
        } 
        .contents_title tr td:nth-child(4),
        .contents_content tr td:nth-child(4)
        {
            width:10%; 
        }
        .contents_content input
        {
            width:70%;
        }
        
        .check_line
        {
            background:#DCF8A8;
        }
    </style>
    <script type="text/javascript">
        var body;
        Vue.component("param_input", {
            props: ["data"],
            template: "<div class='param_item' v-show='data.isshow'><label>{{ data.lebeltext }}</label><input v-bind:type='data.type' v-bind:name='data.name' v-bind:list='data.list' v-bind:disabled='data.disabled' v-bind:value='data.value'></input></div>"
        })

        Vue.component("param_button", {
            props: ["data"],
            template: "<div class='param_item_btn'><input v-bind:type='data.type' v-bind:name='data.name' v-bind:value='data.value' v-bind:disabled='data.disabled' v-on:click='f_click(data.index)'></input></div>",
            methods: {
                f_click: function (index) {
                    eval(body.param_button_data[index].click_fc);
                }
            }
        })

        $(function () {
            body = new Vue({
                el: ".body",
                data: {
                    param_input_data: [
                       { lebeltext: "仓库ID:", type: "text", name: "n_Warehouse_Id", list: "n_Warehouse_Id", disabled: true, isshow: false, value: "@(n_Warehouse_Id)" },

                       { lebeltext: "操作开始时间:", type: "date", name: "BeginTime", list: "BeginTime", disabled: false, isshow: true, value: "" },
                       { lebeltext: "操作结束时间:", type: "date", name: "EndTime", list: "EndTime", disabled: false, isshow: true, value: "" },
                       { lebeltext: "库区名称:", type: "text", name: "s_Warehouse_Name", list: "s_Warehouse_Name", disabled: true, isshow: true, value: "@(s_Warehouse_Name)" },
                       { lebeltext: "储位二维码:", type: "text", name: "s_ReportInventoryCurrent_Code", list: "s_ReportInventoryCurrent_Code", disabled: false, isshow: true, value: "" },
                       { lebeltext: "产品编码:", type: "text", name: "s_ReportInventoryCurrent_GoodsProductCode", list: "s_ReportInventoryCurrent_GoodsProductCode", disabled: false, isshow: true, value: "" },
                       { lebeltext: "产品名称:", type: "text", name: "s_ReportInventoryCurrent_GoodsProductName", list: "s_ReportInventoryCurrent_GoodsProductName", disabled: false, isshow: true, value: "" },
                       { lebeltext: "批次号:", type: "text", name: "s_ReportInventoryCurrent_BatchNumber", list: "s_ReportInventoryCurrent_BatchNumber", disabled: false, isshow: true, value: "" },
                    ],
                    param_button_data: [
                       { index: "0", value: "查询", type: "button", name: "btnSearch", list: "btnSearch", disabled: false, click_fc: "body.f_loadData();" },
                       { index: "1", value: "返回", type: "button", name: "btnEdit", list: "btnEdit", disabled: false, click_fc: "body.f_return();" },
                    ],
                    QCQualityStatus_selectdata: new Array(), //可用状态下拉选项
                    contents_title_load_data: ["储位二维码", "器具", "产品编码", "产品名称", "U9产品编码", "批次号", "在库位数量", "可用状态", "判定原因","操作人","操作时间"],
                    contents_content_data: new Array(),
                    isEdit: false //是否可可用状态判定
                },
                methods: {
                    //加载查询数据
                    f_loadData: function () {

                        body.isEdit = false;

                        //获取参数
                        var param = new Object();
                        $(".param_item").find("input[type=text]").each(function (index, value) {
                            var name = $(value).attr("name");
                            var value = $(value).val();
                            param[name] = value;
                        })

                        $.ajax({
                            type: "GET",
                            url: "/AjaxGet/SelGoodsAvailableStatusHistoryInfoList",
                            data: param,
                            success: function (result) {
                                result = JSON.parse(result);
                                body.contents_content_data = new Array();
                                if (result.IsSuccess) {
                                    if (result.Data[1].length > 0) {
                                        body.QCQualityStatus_selectdata = result.Data[1]
                                    }
                                    if (result.Data[0].length > 0) {
                                        result.Data[0].forEach(function (value, index) { 
                                            value.n_ReportInventoryCurrent_AvailableStatusRecord_IsCheck = false;
                                            //根据状态值给于显示的判定状态
                                            value.n_ReportInventoryCurrent_AvailableStatusRecord_NewQCQualityStatus_text = "";

                                            var arr = body.QCQualityStatus_selectdata.filter(function (item) {
                                                return item.key == value.s_ReportInventoryCurrent_AvailableStatusRecord_NewQCQualityStatus;
                                            });
                                            
                                            if (arr.length > 0) {
                                                value.n_ReportInventoryCurrent_AvailableStatusRecord_NewQCQualityStatus_text = arr[0]["value"];
                                            }

                                            body.contents_content_data.push(value);
                                        })
                                    }
                                } else {
                                    alert(result.Msgs[0]);
                                }
                            }
                        })

                    },
                    //选择行事件
                    f_checkline: function (event) {

                        var index = $(event.target).parent().attr("index") == undefined ? $(event.target).parent().parent().attr("index") : $(event.target).parent().attr("index");

                        body.contents_content_data[index].n_ReportInventoryCurrent_AvailableStatusRecord_IsCheck = body.contents_content_data[index].n_ReportInventoryCurrent_AvailableStatusRecord_IsCheck ? false : true;

                    },
                    //返回事件
                    f_return: function () {
                        location.href = "/Warehouse/AvailableStatus?n_Warehouse_Id=" + "@(n_Warehouse_Id)" + "&s_Warehouse_Name=" + "@(s_Warehouse_Name)";
                    }
                }
            })
        })
    </script>
</head>
<body>
    <div class="body">
        <div class="params">
            <div id="module_toolbar">
                <param_button v-for="param_button in param_button_data" v-bind:data="param_button" ></param_button>
            </div>  
            <param_input v-for="param_input in param_input_data" v-bind:data="param_input"></param_input> 
        </div>
        <div class="contents">
            <div class="contents_title">
                <table cellspacing="0">
                    <tr v-show="isEdit === false">
                        <td v-for="contents_title in contents_title_load_data">
                            {{ contents_title }}
                        </td>
                    </tr> 
                </table>
            </div>
            <div class="contents_content">
                <table cellspacing="0">
                    <tr class="tr_load" v-show="isEdit === false" v-for="(contents_content,index) in contents_content_data" :index="index" :class="[ contents_content.n_ReportInventoryCurrent_AvailableStatusRecord_IsCheck ? 'check_line':'' ]" v-on:click="f_checkline($event)">
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_Code }}</td>
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_BinCode }}</td>
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_GoodsProductCode }}</td>
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_GoodsProductName }}</td>
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_ExternalCode }}</td>
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_BatchNumber }}</td>
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_Number }}</td>
                       <td>{{ contents_content.n_ReportInventoryCurrent_AvailableStatusRecord_NewQCQualityStatus_text }}</td>   
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_Reason }}</td>   
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_Operator }}</td>   
                       <td>{{ contents_content.s_ReportInventoryCurrent_AvailableStatusRecord_Operatime  }}</td>   
                    </tr> 
                </table>
            </div>
        </div>
    </div>
</body>
</html>
