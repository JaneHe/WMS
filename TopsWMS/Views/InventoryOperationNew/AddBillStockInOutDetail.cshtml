@{
    Layout = "~/TopsLib/Views/Shared/_MobileTemplate.cshtml";

    string ParentIds = Request.QueryString["ParentIds"];

    string n_Warehouse_Id = Request.QueryString["n_Warehouse_Id"];

    string n_BillStockInOut_Id = Request.QueryString["n_BillStockInOut_Id"];

    //在储位信息表ID
    string n_ReportInventoryCurrentDetail_Id = string.Empty;
    if (Request.QueryString.AllKeys.Contains("n_ReportInventoryCurrentDetail_Id")){
        n_ReportInventoryCurrentDetail_Id = Request.QueryString["n_ReportInventoryCurrentDetail_Id"];
    }

    //储位二维码
    string s_ReportInventoryCurrentDetail_Code = string.Empty;
    if (Request.QueryString.AllKeys.Contains("s_ReportInventoryCurrentDetail_Code"))
    {
        s_ReportInventoryCurrentDetail_Code = Request.QueryString["s_ReportInventoryCurrentDetail_Code"];
    }  

    //当前日期
    string datetime = DateTime.Now.ToString("yyyy-MM-dd");

    //产品号，分类，颜色
}
@section Body{
    <div class="body">
        <div>
            <input type="date" v-bind:class="dateClass_Showed" value="@(datetime)" />
        </div>
        <div>
            <input type="text" v-bind:class="spaceClass_Showed" placeholder="可输入储位二维码进行筛选" v-on:keyup.enter="f_SelInventoryNewReportInventoryCurrentDetail" value="@(s_ReportInventoryCurrentDetail_Code)" />
        </div>
        <div v-bind:class="titleTab_Showed">
            <table>
                <tr>
                    <th>
                        储位码/<br />
                        产品编码/<br />
                        器具码
                    </th>
                    <th>
                        产品名称
                    </th>
                    <th>
                        批次号/<br />
                        库存数量
                    </th>
                </tr>
            </table>
        </div>
        <div v-bind:class="infoTab_Showed">
            <table>
                <tr v-for="(item,i) in DataList" :index="i" :n_ReportInventoryCurrentDetail_Id="item.n_ReportInventoryCurrentDetail_Id" :class="{ 'morechecked':item.isCheck }" v-on:click="f_checkInventoryOperationRecord"> 
                    <td>
                        {{ item.s_ReportInventoryCurrentDetail_Code }} / <br />
                        {{ item.s_ReportInventoryCurrentDetail_GoodsProductCode }}/ <br />
                        {{ item.s_Bin_Code }}
                    </td>
                    <td>
                        {{ item.s_ReportInventoryCurrentDetail_GoodsProductName }}
                    </td>
                    <td>
                        {{ item.s_ReportInventoryCurrentDetail_BatchNumber }} / <br />
                        {{ item.n_ReportInventoryCurrentDetail_Number }}
                    </td>
                </tr>
            </table>
        </div>
        <div>
            <div v-bind:class="button_Div_Showed">
                 <div v-on:click="f_doingInventoryOperation">进行盘点</div>
            </div>
        </div>
    </div>
}
@section Script{
    <style type="text/css">
        .dateClass
        {
            line-height: 25px;
            width: calc(90%);
            margin: calc(1.5%) calc(5%);
            border: 1px solid lightblue;
        }
        .spaceClass
        {
            line-height: 25px;
            width: calc(90%);
            margin: calc(1.5%) calc(5%);
            border: 1px solid lightblue;
            text-align: center;
            font-size: 12px;
        }
        
        .titleTab
        {
            width: calc(90%);
            line-height: 25px;
            margin: calc(1.5%) calc(5%) calc(0%) calc(5%);
        }
        .titleTab table
        {
            width: 100%;
            border-collapse: collapse;
        }
        .titleTab th
        {
            width: 33%;
            font-family: 微软雅黑;
            border: 1px solid #a5e0a5;
            font-weight: normal;
            background: rgb(200 220 232);
            font-size: 12px;
        }
        
        .infoTab
        {
            width: calc(90%);
            line-height: 25px;
            margin: calc(0%) calc(5%) calc(1.5%) calc(5%);
            height:145px;
            overflow-y:scroll;
        }
        .infoTab table
        {
            width: 100%;
            border-collapse: collapse;
        }
        .infoTab td
        {
            width: 33%;
            font-family: 微软雅黑;
            border: 1px solid #a5e0a5;
            font-weight: normal; 
            font-size: 12px;
            text-align:center;
        }
        
        .button_Div div {
            width: calc(90%);
            margin: calc(1.5%) calc(0%) calc(0%) calc(5%);
            background: rgb(80, 182, 248);
            color: white;
            font-family: 微软雅黑;
            font-size: 12px;
            line-height: 45px;
            text-align: center;
            border-radius: 10px;
            cursor: pointer;
            display: inline-block;
            letter-spacing: 2px; 

        }
        
        .morechecked
        {
            background:#a5e0a5;
        }
    </style>
    <script type="text/javascript">
        var ajaxhelper = new ajaxHelper();

        //ajax Post对象
        var ajaxobjFirst = null;

        //ajax Get对象
        var ajaxobjSecond = null;

        $(function () {
            var vue = new Vue({
                el: ".body",
                data: {
                    dateClass_Showed: "dateClass", //时间选择框样式
                    spaceClass_Showed: "spaceClass", //储位输入框样式
                    titleTab_Showed: "titleTab", //标题表格样式
                    infoTab_Showed: "infoTab",  //结果表格样式
                    button_Div_Showed: "button_Div", //按钮样式
                    DataList: []
                },
                methods: {
                    //加载在库的库位详细信息
                    f_SelInventoryNewReportInventoryCurrentDetail: function () {
                        //对象名 查询在库的库位详细信息
                        var objectName = "SelInventoryNewReportInventoryCurrentDetail";
                        //传递参数
                        var param = {
                            s_ReportInventoryCurrentDetail_QualityStatus: 1,
                            s_ReportInventoryCurrentDetail_Code: $(".spaceClass").val(),
                            n_BillStockInOut_Id: "@(n_BillStockInOut_Id)"
                        }

                        ajaxhelper.ajax_Get(objectName, param, function (result) {
                            vue.DataList = [];
                            if (result.Data[0].length > 0) {
                                result.Data[0].forEach(function (value, index) {
                                    vue.DataList.push({
                                        n_ReportInventoryCurrentDetail_Id: value.n_ReportInventoryCurrentDetail_Id,
                                        s_ReportInventoryCurrentDetail_Code: value.s_ReportInventoryCurrentDetail_Code,
                                        s_ReportInventoryCurrentDetail_GoodsProductCode: value.s_ReportInventoryCurrentDetail_GoodsProductCode,
                                        s_ReportInventoryCurrentDetail_GoodsProductName: value.s_ReportInventoryCurrentDetail_GoodsProductName,
                                        s_Bin_Code: value.s_Bin_Code,
                                        s_ReportInventoryCurrentDetail_BatchNumber: value.s_ReportInventoryCurrentDetail_BatchNumber,
                                        n_ReportInventoryCurrentDetail_Number: value.n_ReportInventoryCurrentDetail_Number,
                                        isCheck: false

                                    })
                                })
                            }
                        }, function (result) {

                            f_commonShowMsg(result.Msgs[0]);
                        })

                        //重新聚焦
                        $(".spaceClass").val("").focus();
                    },
                    //加载页面后执行
                    f_reloadPage: function () {

                        //给标题
                        window.parent.$(".top").find("label").text("WMS-异动盘点操作(新)");
                        //阻止键盘弹出
                        f_preventKeyBoard();


                        //判定是否存在父窗口
                        if (window.top == window.self) {
                            //加载返回事件 
                            window.parent.f_loadEvent("../../../../InventoryOperationNew/Index?ParentIds=" + "@ParentIds");
                        } else {

                            //返回
                            $("#btnBotton").click(function () {

                                location.href = "../../../../InventoryOperationNew/Index?ParentIds=" + "@ParentIds";
                            })
                        }

                        //加载在库的库位详细信息
                        vue.f_SelInventoryNewReportInventoryCurrentDetail();
                    },
                    //选择需异动盘点的记录行
                    f_checkInventoryOperationRecord: function () {
                        var index = $(event.target).parent().attr("index");

                        vue.DataList.forEach(function (v, i) {
                            v.isCheck = false;
                        })
                        vue.DataList[index].isCheck = true;
                    },
                    //进行盘点
                    f_doingInventoryOperation: function () {
                        var arr = vue.DataList.filter(function(value,index){
                            return value.isCheck;
                        })
                        
                        if(arr.length == 0){

                            f_commonShowMsg("请选择需要进行盘点的记录!");

                            //去除锁定
                            $(".button_Div div").removeAttr("disabled");
                            return;
                        }

                        location.href = "AddBillStockInOutDetail_Detail?ParentIds=" + "@(ParentIds)" + "&n_Warehouse_Id=" + "@(n_Warehouse_Id)" + "&n_BillStockInOut_Id=" + "@(n_BillStockInOut_Id)" + "&n_ReportInventoryCurrentDetail_Id=" + arr[0].n_ReportInventoryCurrentDetail_Id + "&s_ReportInventoryCurrentDetail_Code=" + arr[0].s_ReportInventoryCurrentDetail_Code;
                    }
                }
            })

            vue.f_reloadPage();
        })
 
    </script>
}
