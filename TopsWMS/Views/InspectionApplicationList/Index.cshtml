@using Tops.FRM;
@{
    ViewBag.Title = "报检记录清单";
    ViewBag.ModuleName = "资料查询";
    Layout = "~/TopsLib/Views/Shared/_Module.cshtml";
    string QueryName = "SelInspectionApplicationList";
    Tops.FRM.Biz biz = Tops.FRM.Biz.GetBiz(QueryName, Tops.FRM.BizType.Query);
    var metas=Tops.FRM.TopsMeta.LoadMetas(QueryName);

    foreach (string key in metas[0].Keys)
    {
        metas[0][key].Type = "String";
    }
    
    var cols =  ModuleConfig.GetColumns(metas[0], biz.Lookups,biz.Sqls[0], biz);
     
    string ExcelDate = DateTime.Now.ToString("yyyy-MM-dd");
}

@section Params{
    <form id="paramForm" method="post" action="/ExcelHelp/DownLoad" > 
    <div id="hiddenlist"> 
        <input type="hidden" name="exportdata" value="SelInspectionApplicationList_ExcelData" />
        <input type="hidden" name="exportcolumn" value="SelInspectionApplicationList_ExcelColumns" />
        <input type="hidden" name="exportsheetname" value="报检记录清单_@(ExcelDate)" />
        <input type="hidden" name="exportcondition" value="" />
    </div>
    <div id="paramlist"> 
        @for (int i = 0; i < biz.Fields.Count; i++)
        {
        string labelStr=string.IsNullOrEmpty(biz.Fields[i].Title) ? biz.Fields[i].FieldName : biz.Fields[i].Title;
        var fieldName = biz.Fields[i].FieldName;
        var lookupField = biz.Lookups.Where(p => p.KeyField == fieldName);
        <div class="param_item">
            @if (lookupField != null && lookupField.ToList().Count > 0)
                    {
                        <label class="plugin_label">@(labelStr):</label>
                        <input type="text" name="@(fieldName)"  fieldType="lookup" label="@(labelStr)" />
                        <script type="text/javascript">
                            $("input[name=@(fieldName)]")[0].lookup=@Html.Raw(lookupField.First<Lookup>().ToJson());
                        </script>
                    }
            else if (biz.Fields[i].DataList.Count > 0)
            {
                <label class="plugin_label">@(labelStr):</label>
                <select name="@(fieldName)" fieldType="select" >
                    @foreach(var item in biz.Fields[i].DataList){
                    <option value="@(item.Key)">@(item.Value)</option>
                    }
            </select>
            }else if (biz.Fields[i].FieldType.EndsWith("DateTime"))
            {
                <input type="text" name="@(fieldName)"  fieldType="date" label="@(labelStr)"/>
            }
            else
            {
            <input type="text" name="@(fieldName)"  fieldType="textbox" label="@(labelStr)"/>
            }
        </div>
        }
        <div style=" clear:both;"></div>
    </div>
    </form>
    
}
@section Script{
<script type="text/javascript">
    var topsRender=null;
    var grid =null;

    //当前时间
    var nowDate = new Date().getFullYear().toString() +"-"+ (new Date().getMonth() + 1 < 10 ? "0" + (new Date().getMonth() + 1) : (new Date().getMonth() + 1).toString())
            +"-"+ (new Date().getDate() < 10 ? "0" + new Date().getDate() : new Date().getDate().toString());

    $(function () {
        $("#module_toolbar input").hide();
        $(",#searchBt,#exportBt,#checkBt").show();
        //渲染插件
        topsRender=$("#paramlist *[fieldType]").pluginRender();
        
        //锁定开始时间，锁定结束时间处理
        $("#paramlist .param_item:eq(0)").empty().append("<input type='text' name='BeginTime' value='"+ nowDate + " 08:00" +"' />");
        $("#paramlist .param_item:eq(1)").empty().append("<input type='text' name='EndTime' />");

        $("input[name=BeginTime]").ligerDateEditor({ showTime: true, label: '锁定开始时间', labelWidth: 80,labelAlign: 'right' });
        $("input[name=EndTime]").ligerDateEditor({ showTime: true, label: '锁定结束时间', labelWidth: 80,labelAlign: 'right' });
         
        //初始化时间
        //$("input[name=BeginTime]").val("@ExcelDate");
        $("#checkBt").attr("value","货物可用状态变更");

        //初始化表格
        grid = $("#datagrid").ligerGrid({
            columns: @Html.Raw(cols.ToJson(true)),
            url: '/AjaxGridData/SelInspectionApplicationList',
            method: 'get',
            delayLoad: true,
            dataType: "local",
            dataAction: 'server',
            root: 'Data',                       //数据源字段名
            record: 'Other1',                     //数据源记录数字段名
            rownumbers: true,
            //data: AllProductData, 
            showTitle: false,
            width: '99.5%',
            height: '100%',
            heightDiff: -10,
            checkbox:true,
            enabledSort:false,
            onSuccess: function (data, b) {
                $.topsErrorDeal(data);
            },
            onDblClickRow: function (rowdata, rowindex, rowDomElement) {
                var idKey='@(biz.Sqls[0].Key)';
                if($.trim(idKey)=='')return;
                var idData=new Object();
                idData[idKey]=rowdata[idKey];
                f_addTab(rowdata[idKey], "维护[" + rowdata[idKey] + "]", "/module/modify?"+"ctrl=edit&id=" +escape($.toJSON(idData)) + "&" + Math.random());
            }
        });
        //绑定按钮事件
        $("#searchBt").click(function () {
            $('select[name=rp]').val($(".l-bar-group,.l-bar-selectpagesize").find("option:selected").val());
            grid.options.parms = $("form#paramForm").serializeArray();
            $('select[name=rp]').change();
        });
        $("#addBt").click(function () {
            f_addTab("Add", "添加", "/module/modify?"+"ctrl=add&" + Math.random());
        }); 
        $("#exportBt").click(function(){
            $("#paramForm").submit();
        })
        
        //货物可用状态变更
        $("#checkBt").click(function(){
            //获取选中行
            var rows = grid.getSelectedRows();

            if(rows.length == 0){
               alert("请选择行!");
               return;
            }

            $.ligerDialog.open({
                title: "货物可用状态变更",
                width: 500,
                height: 200,
                url: "/InspectionApplicationList/AvailabilityStatusChange",
                buttons: [{
                    text: "保存", onclick: function (item, dialog) {
                        
                        if(!confirm("请确认是否进行货物可用状态变更?")){ 
                           return;
                        }

                        //获取选中的可用状态信息
                        var object = dialog.frame.f_loadSelectedData(); 
                        //组装数组
                        var param = new Array(); 
                        param = $.extend(true,param,rows);
                        param.forEach(function(value,index){
                            value.n_InspectionApplicationList_AfterQCQualityStatus = object.n_InspectionApplicationList_AfterQCQualityStatus;
                            value.n_isOpenLock = object.n_isOpenLock;
                        })
                         
                         
                        $.ajax({
                            type:"POST",
                            url:"/AjaxPost/UpdateInspectionApplication",
                            data:{Dictionarys:param},
                            success:function(result){
                                result = JSON.parse(result);
                                if(result.IsSuccess){
                                   alert("保存成功"); 
                                   debugger;
                                   dialog.close(); 
                                   $("#searchBt").click();
                                }else{
                                   alert(result.Msgs[0]);
                                }
                            }
                        }) 
                    }
                }, {
                    text: "取消", onclick: function (item, dialog) {
                        dialog.close();
                    }
                }]
            })
        })

    });
    function f_flushGrid()
    {
        grid.loadData();
    }
</script>
}
<div id="datagrid"></div>


