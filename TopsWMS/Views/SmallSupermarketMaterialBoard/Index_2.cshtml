@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>小件超市补料看板_2</title>
    <script src="../../Scripts/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="../../Scripts/vue/vue.js" type="text/javascript"></script>
    <script src="../../Scripts/js/JsBarcode.all.min.js" type="text/javascript"></script>
    <script src="../../TopsLib/Scripts/QRCodeJs/jquery-barcode-2.0.2.min.js" type="text/javascript"></script>
    <script src="../../Scripts/Jane/Common.js" type="text/javascript"></script>
    <link href="../../Scripts/vue/syalert.min.css" rel="stylesheet" type="text/css" />
    <script src="../../Scripts/vue/syalert.min.js" type="text/javascript"></script>
    <style type="text/css">
        .title
        {
            border: 1px solid blue; 
            font-family:微软雅黑;
            text-align:center;
            width:98vw;
            height:5vh;
            font-size:14px;
        }
        .content
        {
            border: 1px solid blue; 
            background:#eaf2fe;
            font-family:微软雅黑;
            text-align:center;
            width:98vw;
            height:91vh;
            font-size:13px;
        }
        .title table,.content table
        {
            width:100%;
        }
        .title tr
        {
            background:#eaf2fe;    
        }
         @*.content tr:nth-child(odd)
        {
            background: #eef4fb;    
        }
        .content tr:nth-child(even)
        {
            background: #dde9f7;    
        }*@
        
        .title td 
        {    
            width:calc(14%);
            line-height:5vh;
            font-weight:bold; 
            height:5vh;
        }
        .content td
        {    
            width:calc(14%); 
            line-height:5vh;
            font-weight:bold; 
            height:5vh;
        }


        .title td:nth-child(7),  
        .title td:nth-child(8),   
        .content td:nth-child(7),  
        .content td:nth-child(8)
        {
            width:calc(8%); 
        } 
        
        .title td:nth-child(1),
        .title td:nth-child(3), 
        .content td:nth-child(1), 
        .content td:nth-child(3)
        {
            width:calc(9%);  
        }
         
        .title td:nth-child(6),   
        .content td:nth-child(6)   
        {
            width:calc(11%);  
        } 
        
        .title td:nth-child(2),  
        .content td:nth-child(2) 
        {
            width:calc(33%)    
        }
        
        .title td:nth-child(4), 
        .title td:nth-child(5), 
        .content td:nth-child(4), 
        .content td:nth-child(5)
        {
            width:calc(11%);  
        }

        
        .content tr:last-child td:nth-child(1) div
        {
            display:inline-block;
            background:#dbc7c2;
            margin:0px 1vw;
            width:6vw;
            cursor:pointer;
        }  
        .content tr:last-child td:nth-child(1) div[name=submit]
        { 
            display:inline-block;
            background:#dbc7c2;
            margin:0px 1vw;
            width:6vw;
            cursor:pointer;
            float:right;
        }
        
        .content tr:last-child div:active
        {
            display:inline-block;
            background:lightgreen;
            margin:0px 1vw;
            width:6vw;
            cursor:pointer;
        }
        .content tr:last-child td:nth-child(1) label
        {
            margin-right 1vw; 
        }
        .content tr:last-child td:nth-child(1) span
        {
            color:blue;  
        }
         
        [name=spacebarcode]
        {
            width:calc(90%);    
        }
        
        .shadow {
            width: 100%;
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            z-index: 998;
            background-color: #000;
            opacity: 0.6;
        }

        .sy-alert {
            position: fixed; 
            background: #fff;
            border-radius: 5px;
            overflow: hidden;
            width:75vw;
            max-width: 90%;
            max-height: 80%;
            left: 0;
            right: 0;
            margin: 0 auto;
            z-index: 9999;
        }
        .sy-content .form
        {
            width:70vw;
            height:50vh;
            margin:0px auto;
        } 
        .content_detail
        {
            border: 1px solid blue; 
            background:#eaf2fe;
            font-family:微软雅黑;
            text-align:center;
            width:calc(98%);
            height:45vh;
            font-size:13px; 
        }
        .content_detail table
        {
            width:calc(100%); 
        } 
        .content_detail table tbody 
        {
             display:block;
             height:39vh;
             overflow-y:scroll;
        }
        .content_detail table thead, .content_detail table tbody tr 
        {
             display:table;
             width:100%;
             table-layout:fixed;
        }
        .content_detail table thead 
        {
             width:calc(100% - 1.3em);
        } 
        
        .content_detail tr
        {
            background:#eaf2fe;    
        }
        .content_detail td 
        {    
            width:calc(12%);
            line-height:5vh;
            font-weight:bold; 
            border:1px solid white;
            height:5vh;
        } 
        .content_detail td:nth-child(2) 
        {
            width:calc(40%);    
        }
        
        .transform_class
        {
            -webkit-transform: rotateX(-90deg);
            -ms-transform: rotateX(-90deg);
            transform: rotateX(-90deg); 
            animation: notransform 2s infinite;
            animation-delay: 2s;
            -webkit-animation: notransform 2s infinite;
            -webkit-animation-delay: 2s;  
        }

        @@-webkit-keyframes notransform {
            100% {transform: none;}
        }
        @@keyframes notransform {
            100% {transform: none;}
        }
        
        @@-webkit-keyframes twinkling{    /*透明度由0到1*/
            0%{
               opacity:0; /*透明度为0*/
            }
            100%{
               opacity:1; /*透明度为1*/
            }
        }
    </style>
    <script type="text/javascript">
        var timer = null; //计时器

        $(function () {
            var vue = new Vue({
                el: ".body",
                data: {
                    InspectionApplicationBoardData: new Array(), //看板数据源 
                    PageIndex: 1, //当前展示数据的页数
                    NextPageIndex: 1, //下一次使用的页数
                    InspectionApplication_Cou: 1, //总页数
                    IsShadowShow: false, //控制遮罩
                    showRecordCou: 15, //一页显示条数
                    transform_class: false, //显示刷新动画
                    label_JSbarcode_option: {
                        format: "code128", //选择要使用的条形码类型
                        width: 1.5, //设置条之间的宽度
                        height: 50, //高度
                        displayValue: false, //是否在条形码下方显示文字
                        font: "Microsoft YaHei", //设置文本的字体
                        textMargin: 1, //设置条形码和文本之间的间距
                        fontSize: 15, //设置文本的大小
                        lineColor: "#000"//设置条和文本的颜色。
                        // margin: 2//设置条形码周围的空白边距
                    },
                    label_barcode_option: {
                        output: 'css',       //渲染方式 css/bmp/svg/canvas 
                        color: 'black',   //条码颜色
                        barWidth: 1.5,        //单条条码宽度 
                        render: "table",
                        barHeight: 20,     //单体条码高度 
                        addQuietZone: false,  //是否添加空白区（内边距）
                        fontSize: 12,
                        showHRI: false //不显示条码文字
                    },
                    submit_param: {
                        SumNumber: 0,
                        grid1: new Array()
                    }, //需提交的数据
                    submit_InspectionApplicationBoardData: new Array() //展示提交明细数据
                },
                methods: {
                    //加载看板信息
                    f_loadBoardData: function () {
                        //vue.IsShadowShow = true; 

                        //alert(vue.PageIndex + "==" + vue.NextPageIndex + "==" + vue.InspectionApplication_Cou);
                        //f_preventKeyBoard();

                        $.ajax({
                            type: "GET",
                            url: "/AjaxGet/SelSmallSupermarketMaterialBoardList_2",
                            data: { PageIndex: vue.PageIndex },
                            success: function (result) {
                                //定时清空
                                vue.InspectionApplicationBoardData = new Array();
                                vue.submit_param = {
                                    SumNumber: 0,
                                    grid1: new Array()
                                }

                                result = JSON.parse(result);
                                if (result.IsSuccess) {
                                    if (result.Data[0].length > 0) {
                                        vue.InspectionApplicationBoardData = result.Data[0];
                                    }
                                    if (result.Data[0].length < vue.showRecordCou) {
                                        var len = result.Data[0].length
                                        for (var index = 1; index <= vue.showRecordCou - len; index++) {
                                            var obj = $.extend(true, {}, result.Data[0][0]);
                                            for (var column in obj) {
                                                obj[column] = '';
                                            }
                                            obj["Result_RowId"] = "1";

                                            vue.InspectionApplicationBoardData.push(obj);
                                        }
                                    }

                                    //赋值给予颜色
                                    if (result.Data[0].length > 0) {
                                        result.Data[0].forEach(function (v, i) {
                                            v.isWarmStatus = false;
                                            if (v.储位利用率 != "---" && v.预警储量 != "") {
                                                if (parseFloat(v.储位利用率.replace("%", "")) < parseFloat(v.预警储量.replace("%", ""))) {
                                                    v.isWarmStatus = true;
                                                }
                                            }
                                            //当前默认显示第一个分配储位，等第一个分配储位扫描完成后才能继续进行第二个分配储位的操作
                                            if (v["Result_RowId"] == "1") {
                                                v["isShow"] = true;
                                            }

                                            v.isOver = false;
                                        })

                                    }

                                    //数据加载完之后触发
                                    Vue.nextTick(function () {

                                        if (vue.InspectionApplicationBoardData.length > 0) {
                                            $.each(vue.InspectionApplicationBoardData, function (i, v) {
                                                //JsBarcode("#spaceBarCode_" + i, v.应下架储位码, vue.GoodsProductCode_option);
                                                //$("#spaceBarCode_" + i).barcode("BC010101", "code128", vue.label_barcode_option);
                                                $(".content").find("tr:eq(" + i + ") [name=下架数量]").val($(".content").find("tr:eq(" + i + ") [name=下架数量]").attr("old_value"));
                                            })
                                            $("[name=spacebarcode]").eq(0).focus();

                                            //设置背景色
                                            $(".content").find("tr:visible").each(function (index, value) {
                                                if (index % 2 == 0) {
                                                    $(value).css("background", "#eef4fb");
                                                } else {
                                                    $(value).css("background", "#dde9f7");
                                                }
                                            })
                                        }
                                    })

                                    //总页数赋值
                                    vue.InspectionApplication_Cou = result.Data[1][0].InspectionApplication_Cou;

                                    //页数更新
                                    if (vue.PageIndex >= result.Data[1][0].InspectionApplication_Cou) {
                                        vue.NextPageIndex = 1;
                                    } else {
                                        vue.NextPageIndex += 1;
                                    }
                                } else {
                                }

                                vue.transform_class = true;
                                //延迟关闭
                                setTimeout(function () {
                                    vue.transform_class = false;
                                }, 4000)

                                //                                //30s定时刷新数据
                                //                                timer = setTimeout(function () {

                                //                                    vue.PageIndex = vue.NextPageIndex;

                                //                                    vue.f_loadBoardData();
                                //                                }, 30000);
                                //vue.IsShadowShow = false;
                            }
                        })
                    },
                    //使用websocket进行通信传输
                    f_usewebsocket: function (RecordID, SpaceBarCode) {
                        var device = "SmallSupermarket";

                        //连接websocket
                        var ws = new WebSocket("ws://10.50.10.104:8208");
                        ws.onopen = function () {
                            console.log("连接成功!")
                        };
                        ws.onmessage = function (result) {

                            if (result.data.indexOf(device) != -1) {
                                console.log("获取成功信息：" + result.data);
                                alert("获取成功信息：" + result.data);
                            }
                        };
                        ws.onerror = function (error) {
                            console.log("获取错误信息：" + error.data)
                        };
                        ws.onclose = function () {
                            console.log("连接关闭!")
                        };
                    },
                    //文本框改值事件
                    f_changeline: function (event) {

                        var barcode = $(event.target).val();
                        if (event.keyCode == 13 || event.keyCode == 186) {
                            barcode = barcode.replace(";", "");
                        } else {
                            return;
                        }
                        $(event.target).val(barcode);

                        var index = $(event.target).parent().parent().attr("index");
                        //去除分号
                        vue.InspectionApplicationBoardData[index]["扫描储位码"] = barcode;

                        if (vue.InspectionApplicationBoardData[index]["扫描储位码"] == vue.InspectionApplicationBoardData[index]["应下架储位码"]) {

                            //判定下架数量是否为空，以及下架数量是否大于原先最大的下架数量值。
                            if ($(event.target).parent().parent().find("[name=下架数量]").val() == "") {
                                alert("请填写对应的补货下架数量!");
                                $(event.target).parent().parent().find("[name=下架数量]").focus();
                                return;
                            }
                            var val = $(event.target).parent().parent().find("[name=下架数量]").val();
                            //var old_val = $(event.target).parent().parent().find("[name=下架数量]").attr("old_value");
                            var old_val = vue.InspectionApplicationBoardData[index]["储位库存数"];
                            if (parseFloat(val) > parseFloat(old_val)) {
                                //alert("填写的补货下架数量不能大于建议补货下架的数量,请重新输入!");
                                alert("填写的补货下架数量不能大于该储位的库存数,请重新输入!");
                                $(event.target).parent().parent().find("[name=下架数量]").focus();
                                return;
                            }


                            //检查是否是按顺序进行扫描储位码,达到先进先出的效果
                            var RecordID = vue.InspectionApplicationBoardData[index]["RecordID"];
                            var msg = "";

                            $.each(vue.InspectionApplicationBoardData, function (i, v) {
                                if (v.RecordID == RecordID && index != i) {
                                    if (index > i && ($(".content tr[index=" + i + "] input[name=spacebarcode]").val() == "" && v["扫描储位码"] == "") && v["应下架储位码"] != "") {

                                        msg = "请按照顺序依次对当前该产品进行扫描储位码操作！";
                                        vue.InspectionApplicationBoardData[index]["扫描储位码"] = "";
                                        $(event.target).parent().parent().parent().find("tr:eq(" + i + ") [name=spacebarcode]").focus();
                                        return false;
                                    }
                                }
                            })

                            if (msg != "") {
                                alert(msg);
                                return;
                            }

                            //数量叠加
                            vue.submit_param.SumNumber += parseFloat(vue.InspectionApplicationBoardData[index]["建议补货包装数"]) * parseFloat(vue.InspectionApplicationBoardData[index]["单位包装件数"]);

                            var param = new Object();
                            param.GoodsProductCode = vue.InspectionApplicationBoardData[index]["产品编码"];
                            param.RecordID = vue.InspectionApplicationBoardData[index]["RecordID"]
                            //param.DownNumber = parseFloat(vue.InspectionApplicationBoardData[index]["建议补货包装数"]) * parseFloat(vue.InspectionApplicationBoardData[index]["单位包装件数"]);
                            param.DownNumber = $(event.target).parent().parent().find("[name=下架数量]").val();
                            param.n_ReportInventoryCurrent_Id = vue.InspectionApplicationBoardData[index]["n_ReportInventoryCurrent_Id"];
                            param.InventoryAmount = vue.InspectionApplicationBoardData[index]["当前储位工件数"];
                            param.BoardType = "0";
                            param.index = index;
                            param.UpdateFlag = "modify";

                            vue.submit_param.grid1.push(param);

                            //组合明细里的数据
                            var submit_param = $.extend(true, {}, vue.InspectionApplicationBoardData[index]);
                            submit_param["下架数量"] = $(event.target).parent().parent().find("[name=下架数量]").val();
                            vue.submit_InspectionApplicationBoardData.push(submit_param);


                            $(".content tr:eq(" + index + ")").css({ "-webkit-animation": "twinkling 1s infinite ease-in-out" }); //在对象element中添加闪烁动画

                            //延迟关闭闪烁效果
                            setTimeout(function () {
                                $(".content tr:eq(" + index + ")").css({ "-webkit-animation": "" });

                                //变更颜色
                                var obj = $.extend(true, {}, vue.InspectionApplicationBoardData);
                                vue.InspectionApplicationBoardData = new Array();
                                obj[index].isWarmStatus = false;
                                obj[index].isOver = true;
                                vue.InspectionApplicationBoardData = obj;

                                //焦点放在下一个文本框中
                                var focus_index = -1;
                                $.each(vue.InspectionApplicationBoardData, function (i, v) {
                                    if (v.应下架储位码 != "" && (v.扫描储位码 == "" || v.扫描储位码 == undefined)) {
                                        focus_index = i;
                                        return false;
                                    }
                                })
                                if (focus_index != -1) {
                                    $(".content tr:eq(" + focus_index + ")").find("[name=spacebarcode]").focus();
                                }
                                //当前扫描储位码完成后，检查是否存在后续的该产品匹配的下架储位码，有的话进行切换显示
                                var RecordID = vue.InspectionApplicationBoardData[index]["RecordID"];
                                var RowId = vue.InspectionApplicationBoardData[index]["RowId"];

                                var Result_Index = -1;
                                $.each(vue.InspectionApplicationBoardData, function (i, v) {
                                    if (v.RecordID == RecordID && v["扫描储位码"] == undefined &&
                                    v.RowId != RowId && (Result_Index == -1 || Result_Index > i)) {
                                        Result_Index = i;
                                    }
                                })

                                if (Result_Index != -1) {

                                    $(".content tr:eq(" + index + ")").fadeOut(1500);
                                    setTimeout(function () {

                                        //变更颜色
                                        var obj = $.extend(true, {}, vue.InspectionApplicationBoardData);
                                        vue.InspectionApplicationBoardData = new Array();
                                        obj[Result_Index].isShow = true;  //如果有第二条匹配储位记录的话则直接显示第二条记录
                                        obj[index].isShow = false;
                                        vue.InspectionApplicationBoardData = obj;

                                        $(".content tr:eq(" + Result_Index + ")").fadeIn(1500);
                                    }, 1500)
                                }

                            }, 3000)
                        } else {
                            alert("当前扫描储位码与应下架储位码不符,请重新输入!");
                            $(event.target).val("").focus();
                            return;
                        }
                    },
                    //更改下架数量
                    f_changeNumber: function () {
                        var old_value = $(event.target).attr("inventory_value");
                        var value = $(event.target).val();
                        if (parseFloat(value) > parseFloat(old_value)) {
                            $(event.target).val(old_value);
                            return;
                        }
                    },
                    //提交单据
                    f_submitBillstockInOut: function () {
                     

                        if (vue.submit_param.SumNumber == 0) {
                            alert("请确认先扫描储位码进行补料确认,再提交单据!");
                            return;
                        }

                        var isOK = true;
                        //筛选没有进行扫码的工件信息
                        $.each(vue.InspectionApplicationBoardData, function (index, value) {

                            $.each(vue.submit_param.grid1, function (i, v) {
                                if (v.GoodsProductCode == value.产品编码) {
                                    if (value.扫描储位码 != value.应下架储位码) {
                                        isOK = false;
                                    }
                                }
                            })
                        })
                        //                        if (!isOK) {
                        //                            alert("请把已扫码补料的产品的对应其他未扫码记录进行扫码,再提交单据!");
                        //                            return;
                        //                        }

                        //遍历数量变更
                        var num = 0;
                        if (vue.submit_param.grid1.length > 0) {
                            vue.submit_param.grid1.forEach(function (value, index) {
                               
                                value.DownNumber = $("[name=下架数量][index=" + value["index"] + "]").val();

                                num += value.DownNumber;
                            })
                            vue.submit_param.SumNumber = num;

                            //重新组合明细数据
                            vue.submit_InspectionApplicationBoardData.forEach(function (value, index) {

                                value["下架数量"] = $("[name=下架数量][RowId=" + value["RowId"] + "]").val();
                            })
                        }


                        //拆分弹出框
                        syalert.syopen("split_dialog");

                    },
                    //根据页数读取数据
                    f_loadDataByPage: function () {
                        var name = $(event.target).attr("name");
                        var pageindex_ing = -1;

                        if (name == "first") {
                            pageindex_ing = 1;
                        } else if (name == "prev") {
                            pageindex_ing = vue.PageIndex - 1 <= 1 ? 1 : vue.PageIndex - 1;
                        } else if (name == "next") {
                            pageindex_ing = vue.PageIndex + 1 > vue.InspectionApplication_Cou ? vue.InspectionApplication_Cou : vue.PageIndex + 1;
                        } else if (name == "last") {
                            pageindex_ing = vue.InspectionApplication_Cou;
                        }
                        clearTimeout(timer);

                        vue.PageIndex = pageindex_ing;
                        vue.NextPageIndex = pageindex_ing + 1 > vue.InspectionApplication_Cou ? 1 : pageindex_ing + 1;

                        //alert(vue.PageIndex + "==" + vue.NextPageIndex + "==" + vue.InspectionApplication_Cou + "==Page");
                        vue.f_loadBoardData();
                    },
                    //初始化页面
                    f_loadPage: function () {

                        vue.f_loadBoardData();

                        //vue.f_usewebsocket();


                        $(document.body).find("input[type=text][name=spacebarcode]").live("focus", function () {
                            $(this).attr("readonly", "readonly");
                            var nowfocus = $(this);
                            setTimeout(function () {
                                nowfocus.removeAttr("readonly");
                            }, 100);
                        });

                        $(document.body).find("input[type=text][name=spacebarcode]").live("click", function () {
                            $(this).attr("readonly", "readonly");
                            var nowfocus = $(this);
                            setTimeout(function () {
                                nowfocus.removeAttr("readonly");
                            }, 100);
                        });
                    },
                    //确认弹出框
                    f_suredialog: function () {

                        if (!confirm("请确认是否进行补料操作,并进行外购件存储区下架,装配件超市区上架操作?")) {
                            return;
                        }

                        $.ajax({
                            type: "POST",
                            url: "/AjaxPost/InsertSmallSupermarketMaterialBoardRecord",
                            data: vue.submit_param,
                            success: function (result) {
                                result = JSON.parse(result);
                                if (result.IsSuccess) {
                                    alert("提交保存成功!");
                                    vue.f_reload();
                                } else {
                                    alert(result.Msgs[0]);
                                }
                                syalert.syhide('split_dialog');
                            }
                        })
                    },
                    //关闭弹出框
                    f_closedialog: function () {
                        syalert.syhide('split_dialog');
                    },
                    //刷新页面
                    f_reload: function () {

                        vue.f_loadBoardData();
                    }
                }
            })

            //初始化页面
            vue.f_loadPage();


        })
    </script>
</head>
<body>
    <div class="body"> 
        <div>
            <div class="title">
                <table> 
                    <tr> 
                        <td>
                            产品编码
                        </td>
                        <td>
                            产品名称
                        </td>
                        <td>
                            超市库存数
                        </td>
                        @*<td>
                            储位利用率
                        </td>
                        <td>
                            预警储量
                        </td> *@
                        <td>
                            剩余补货库位数
                        </td> 
                        <td>
                            建议补货包装数
                        </td>
                        <td>
                            (补货)下架数量
                        </td>
                        <td>
                            下架储位码
                        </td>
                        <td>
                            扫描储位码
                        </td>
                    </tr>
                </table>
            </div>
            <div class="content">
                <table>
                    <tr :index="index" v-for="(option,index) in InspectionApplicationBoardData" v-bind:style="{ color:option.isWarmStatus ? 'red':(option.isOver ? 'green':'black')  }" v-show="option.isShow === true" >
       
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.产品编码 }}
                        </td>
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.产品名称 }}
                        </td>
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.当前储位工件数 }}
                        </td>
                        @*<td :class="{ 'transform_class':transform_class }">
                            {{ option.储位利用率 }}
                        </td>
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.预警储量 }}
                        </td>*@
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.应下架储位码 != "" ? option.剩余补货库位数:"" }}
                        </td>
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.建议补货包装数 == "0" ? "":option.建议补货包装数 }}
                        </td>
                        <td :class="{ 'transform_class':transform_class }"> 
                            @*{{ option.建议补货包装数 != "" ? option.建议补货包装数 * option.单位包装件数 : "" }}*@
                            @*{{ option.下架数量 == "0" ? "":option.下架数量 }}*@
                            <input type="text" name="下架数量" :RowId="option.RowId"  :index="index" :inventory_value="option.储位库存数" :old_value="option.下架数量 == '0' ? '':option.下架数量" v-if="option.应下架储位码 != ''" style="width:calc(80%)" v-on:change="f_changeNumber" v-on:blur="f_changeNumber" onkeyup="if(isNaN(value))execCommand('undo')" onafterpaste="if(isNaN(value))execCommand('undo')" />
                        </td>
                        <td :class="{ 'transform_class':transform_class }">
                            {{ option.应下架储位码 }}
                        </td>
                        <td :class="{ 'transform_class':transform_class }">
                            @*<svg :id="'spaceBarCode_'+ index"  style="width:calc(95%);margin: 0px auto;" />
                            <div :id="'spaceBarCode_'+ index" style="margin: 0px auto;
                                width:calc(95%);">
                            </div>*@
                            
                            <input type="text" name="spacebarcode" :index="index" v-on:keyup="f_changeline($event)" v-if="option.isOver === false" v-show="option.应下架储位码 != ''" v-model="option.扫描储位码" />
                            <span v-if="option.isOver === true">准备开始补货</span>
                        </td>
                    </tr>
                    
                    <tr>
                        <td colspan="9">
                            <div name="first" v-on:click="f_loadDataByPage">首页</div>
                            <div name="prev" v-on:click="f_loadDataByPage">上一页</div> 
                            <label>当前页数:第<span>{{ PageIndex }}</span>页</label>
                            <label>|</label>
                            <label>总页数:<span>{{ InspectionApplication_Cou }}</span></label>
                            <div name="next" v-on:click="f_loadDataByPage">下一页</div>
                            <div name="last" v-on:click="f_loadDataByPage">最后一页</div>
                            <div name="reload" v-on:click="f_reload">刷新页面</div>
                            <div name="submit" v-on:click="f_submitBillstockInOut">提交单据</div>
                        </td> 
                    </tr>
                </table>
            </div>
        </div>
        <!--遮罩层-->
        <div class="shadow" v-show="IsShadowShow === true">
        </div>
        <!--弹出框-->
        <div class="open_dialog">
             
           <!-- 自定义弹窗 -->
           <div class="sy-alert sy-alert-model animated" sy-enter="zoomIn" sy-leave="zoomOut" sy-type="confirm" sy-mask="true" id="split_dialog">
             <div class="sy-title">提交单据明细</div>
             <div class="sy-content">
               <div class="form">
                   <div class="content_detail"> 
                      <table cellpadding="0" cellspacing="0"> 
                         <thead> 
                             <tr> 
                                <td>
                                    产品编码
                                </td>
                                <td>
                                    产品名称
                                </td>
                                <td>
                                    超市库存数
                                </td> 
                                <td>
                                    补货储位序列
                                </td> 
                                <td>
                                    (补货)下架数量
                                </td>
                                <td>
                                    下架储位码
                                </td> 
                            </tr> 
                         </thead>
                         
                         <tbody> 
                            <tr :index="index" v-for="(option,index) in submit_InspectionApplicationBoardData" v-bind:style="{ background: index % 2 == 0 ? '#eef4fb':'#dde9f7' }" v-show="option.isShow === true" >
        
                                <td>
                                    {{ option.产品编码 }}
                                </td>
                                <td>
                                    {{ option.产品名称 }}
                                </td>
                                <td>
                                    {{ option.当前储位工件数 }}
                                </td> 
                                <td>
                                    {{ option.应下架储位码 != "" ? option.Result_RowId:"" }}
                                </td> 
                                <td>  
                                    {{ option.下架数量 }}
                                </td>
                                <td>
                                    {{ option.应下架储位码 }}
                                </td> 
                            </tr> 
                         </tbody>
                      </table>
                   </div>
               </div>
             </div> 
             <div class="sy-btn">
                 <button v-on:click="f_suredialog">确认提交</button>
                 <button v-on:click="f_closedialog">取消</button> 
             </div> 
           </div>
        </div>
    </div>
</body>
</html>
